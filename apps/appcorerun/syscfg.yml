#
# Wyres
#

# all board specific config is in the target syscfg.yml.

# here we define the generic build info that jenkins can overwrite
syscfg.defs:
    BUILD_VERSION_MAJOR: 
        description: the defined version major value
        value: 0
    BUILD_VERSION_MINOR: 
        description: the defined version minor value
        value: 0
    BUILD_VERSION_DEVNUMBER: 
        description: the builds iteration number if not a final release build
        value: 0


    UNITTEST:
        description: "enable unittest execution in main"
        value: 0

    # mod-io uses 'generic' io names, remapped to physical GPIOs in target
    IO_0: 
        description: "define io slot 0"
        value: 'defineIO(0, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_1: 
        description: "define io slot 1"
        value: 'defineIO(1, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_2: 
        description: "define io slot 2"
        value: 'defineIO(2, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_3: 
        description: "define io slot 3"
        value: 'defineIO(3, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_4: 
        description: "define io slot 4"
        value: 'defineIO(4, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_5: 
        description: "define io slot 5"
        value: 'defineIO(5, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_6: 
        description: "define io slot 6"
        value: 'defineIO(6, -1, "unused", IO_DIN, PULL_UP, 0)'
    IO_7: 
        description: "define io slot 7"
        value: 'defineIO(7, -1, "unused", IO_DIN, PULL_UP, 0)'
            

#set application level config here (rather than in every target)
syscfg.vals:
      # check stack overflows always to ensure tasks stacks are correctly sized
    OS_CTX_SW_STACK_CHECK: 1
    # call our CB during mynewt assert handling
    OS_ASSERT_CB: 1
    # no FILE/LINE info in assert calls (uses too much space in image)
    OS_CRASH_FILE_LINE: 0

    # main() stack size- needs to be reasonable as we use it for event execution for certain mgrs (uart etc)
    OS_MAIN_STACK_SIZE: 512
    # rebootmgr handles watchdogging not the OS
    WATCHDOG_INTERVAL : 0

    # appcore setup for this application : always send UL 1 minute when activated, use SF10 for range, and blick leds to show working
    # essentially we're assuming a powered device
    IDLETIME_MOVING_SECS: 60
    IDLETIME_NOTMOVING_MINS: 1
    IDLETIME_INACTIVE_MINS: 120

    LORA_DEFAULT_ADR: false
    LORA_DEFAULT_SF: 10
    ENABLE_ACTIVE_LEDS: 1
